{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dvdra\\\\Desktop\\\\walkthrough\\\\src\\\\screens\\\\WalkthroughScreen\\\\WalkthroughScreen.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from \"prop-types\";\nimport AppIntroSlider from \"react-native-app-intro-slider\";\nimport dynamicStyles from \"./styles\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nvar WalkthroughScreen = function WalkthroughScreen(props) {\n  var appConfig = props.appConfig;\n  var appStyles = props.appStyles;\n  var colorScheme = useColorScheme();\n  var styles = dynamicStyles(appStyles, colorScheme);\n  var slides = appConfig.onboardingConfig.walkthroughScreens.map(function (screenSpec, index) {\n    return {\n      key: \"\" + index,\n      text: screenSpec.description,\n      title: screenSpec.title,\n      image: screenSpec.icon\n    };\n  });\n\n  var _renderItem = function _renderItem(_ref) {\n    var item = _ref.item,\n        dimensions = _ref.dimensions;\n    return React.createElement(View, {\n      style: [styles.container, dimensions],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: item.image,\n      size: 300,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, item.text)));\n  };\n\n  return React.createElement(AppIntroSlider, {\n    data: slides,\n    slides: slides,\n    renderItem: _renderItem,\n    showDoneButton: true,\n    showNextButton: true,\n    showSkipButton: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  });\n};\n\nWalkthroughScreen.propTypes = {\n  appStyles: PropTypes.object,\n  appConfig: PropTypes.object\n};\nexport default WalkthroughScreen;","map":{"version":3,"sources":["C:/Users/dvdra/Desktop/walkthrough/src/screens/WalkthroughScreen/WalkthroughScreen.js"],"names":["React","PropTypes","AppIntroSlider","dynamicStyles","useColorScheme","WalkthroughScreen","props","appConfig","appStyles","colorScheme","styles","slides","onboardingConfig","walkthroughScreens","map","screenSpec","index","key","text","description","title","image","icon","_renderItem","item","dimensions","container","propTypes","object"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACE,SAAxB;AACA,MAAMC,WAAW,GAAGL,cAAc,EAAlC;AACA,MAAMM,MAAM,GAAGP,aAAa,CAACK,SAAD,EAAYC,WAAZ,CAA5B;AAEA,MAAME,MAAM,GAAGJ,SAAS,CAACK,gBAAV,CAA2BC,kBAA3B,CAA8CC,GAA9C,CACb,UAACC,UAAD,EAAaC,KAAb,EAAuB;AACrB,WAAO;AACLC,MAAAA,GAAG,OAAKD,KADH;AAELE,MAAAA,IAAI,EAAEH,UAAU,CAACI,WAFZ;AAGLC,MAAAA,KAAK,EAAEL,UAAU,CAACK,KAHb;AAILC,MAAAA,KAAK,EAAEN,UAAU,CAACO;AAJb,KAAP;AAMD,GARY,CAAf;;AAWA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,UAAT,QAASA,UAAT;AAAA,WAClB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACf,MAAM,CAACgB,SAAR,EAAmBD,UAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEf,MAAM,CAACW,KADhB;AAEE,MAAA,MAAM,EAAEG,IAAI,CAACH,KAFf;AAGE,MAAA,IAAI,EAAE,GAHR;AAIE,MAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,MAAM,CAACU,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BI,IAAI,CAACJ,KAAjC,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACQ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BM,IAAI,CAACN,IAAhC,CAFF,CAPF,CADkB;AAAA,GAApB;;AAeA,SACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAEP,MADR;AAEE,IAAA,MAAM,EAAEA,MAFV;AAGE,IAAA,UAAU,EAAEY,WAHd;AAKE,IAAA,cAAc,MALhB;AAME,IAAA,cAAc,MANhB;AAOE,IAAA,cAAc,EAAE,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CA3CD;;AA6CAlB,iBAAiB,CAACsB,SAAlB,GAA8B;AAC5BnB,EAAAA,SAAS,EAAEP,SAAS,CAAC2B,MADO;AAE5BrB,EAAAA,SAAS,EAAEN,SAAS,CAAC2B;AAFO,CAA9B;AAKA,eAAevB,iBAAf","sourcesContent":["import React from \"react\";\nimport { View, Image, Text } from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport AppIntroSlider from \"react-native-app-intro-slider\";\nimport dynamicStyles from \"./styles\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nconst WalkthroughScreen = (props) => {\n  const appConfig = props.appConfig;\n  const appStyles = props.appStyles;\n  const colorScheme = useColorScheme();\n  const styles = dynamicStyles(appStyles, colorScheme);\n\n  const slides = appConfig.onboardingConfig.walkthroughScreens.map(\n    (screenSpec, index) => {\n      return {\n        key: `${index}`,\n        text: screenSpec.description,\n        title: screenSpec.title,\n        image: screenSpec.icon,\n      };\n    }\n  );\n\n  const _renderItem = ({ item, dimensions }) => (\n    <View style={[styles.container, dimensions]}>\n      <Image\n        style={styles.image}\n        source={item.image}\n        size={300}\n        color=\"white\"\n      />\n      <View>\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.text}>{item.text}</Text>\n      </View>\n    </View>\n  );\n\n  return (\n    <AppIntroSlider\n      data={slides}\n      slides={slides}\n      renderItem={_renderItem}\n      //Handler for the done On last slide\n      showDoneButton\n      showNextButton\n      showSkipButton={false}\n    />\n  );\n};\n\nWalkthroughScreen.propTypes = {\n  appStyles: PropTypes.object,\n  appConfig: PropTypes.object,\n};\n\nexport default WalkthroughScreen;\n"]},"metadata":{},"sourceType":"module"}